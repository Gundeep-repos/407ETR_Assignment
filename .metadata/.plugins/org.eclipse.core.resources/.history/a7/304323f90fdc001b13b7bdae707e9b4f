
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Iterator;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

import org.json.simple.parser.JSONParser;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


/**
 * Servlet implementation class ServiceClass
 */
@WebServlet("/ServiceClass")
public class ServiceClass extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ServiceClass() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	@SuppressWarnings("unchecked")
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
//		response.getWriter().append("Served at: ").append(request.getContextPath());
		System.out.println("Hello");
		response.setContentType("text/html;charset=UTF-8");
		PrintWriter out = response.getWriter();
		out.println("success");
		
		JSONObject obj = new JSONObject();
		JSONParser parser = new JSONParser();
		
		try {
			obj.put("newName", "Gundeep Singh");
			
//			Path path = Paths.get("/407ETR_Gundeep_Singh_assignment/src/abc.json");
//			System.out.println(path);
//			try (FileWriter file = new FileWriter("abc.json")) {
//	            //We can write any JSONArray or JSONObject instance to the file
//	            file.write(obj.toJSONString()); 
//	            file.flush();
//	 
//	        } catch (IOException e) {
//	            e.printStackTrace();
//	        }
			Object obj2 = parser.parse(new FileReader("D:\\407\\407ETR_Gundeep_Singh_assignment\\src\\interchanges.json"));

			 
			// A JSON object. Key value pairs are unordered. JSONObject supports java.util.Map interface.
			JSONObject jsonObject = (JSONObject) obj2;
 

			JSONArray companyList = (JSONArray) jsonObject.get("Company List");
 
			// An iterator over a collection. Iterator takes the place of Enumeration in the Java Collections Framework.
			// Iterators differ from enumerations in two ways:
			// 1. Iterators allow the caller to remove elements from the underlying collection during the iteration with well-defined semantics.
			// 2. Method names have been improved.
			Iterator<JSONObject> iterator = companyList.iterator();
			while (iterator.hasNext()) {
				System.out.println(iterator.next());
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		
//		obj.put("name", "Abhay Deep Singh");
//		obj.put("name", "Jagdeep Singh");
//		obj.put("name", "Harjit Kaur");
			
		System.out.println(obj);
		out.print(obj);
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
